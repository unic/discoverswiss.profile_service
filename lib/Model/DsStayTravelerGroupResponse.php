<?php
/**
 * DsStayTravelerGroupResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ProfileService-TEST
 *
 * Profile service
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ProfileService\Client\Model;

use \ArrayAccess;
use \ProfileService\Client\ObjectSerializer;

/**
 * DsStayTravelerGroupResponse Class Doc Comment
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DsStayTravelerGroupResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'StayTravelerGroupResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'identifier' => 'string',
        'passport' => 'string',
        'number_of_travelers' => 'int',
        'name' => 'string',
        'additional_property' => '\ProfileService\Client\Model\DsPropertyValueResponse[]',
        'profile_id' => 'string',
        'id' => 'string',
        'data_governance' => '\ProfileService\Client\Model\DsDataGovernanceResponse',
        'created_date_time' => '\DateTime',
        'last_modified' => '\DateTime',
        'last_modified_by' => 'string',
        'created_by_subscription' => 'string',
        'last_modified_by_subscription' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'identifier' => null,
        'passport' => null,
        'number_of_travelers' => 'int32',
        'name' => null,
        'additional_property' => null,
        'profile_id' => null,
        'id' => null,
        'data_governance' => null,
        'created_date_time' => 'date-time',
        'last_modified' => 'date-time',
        'last_modified_by' => null,
        'created_by_subscription' => null,
        'last_modified_by_subscription' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'identifier' => 'identifier',
        'passport' => 'passport',
        'number_of_travelers' => 'numberOfTravelers',
        'name' => 'name',
        'additional_property' => 'additionalProperty',
        'profile_id' => 'profileId',
        'id' => '@id',
        'data_governance' => 'dataGovernance',
        'created_date_time' => 'createdDateTime',
        'last_modified' => 'lastModified',
        'last_modified_by' => 'lastModifiedBy',
        'created_by_subscription' => 'createdBySubscription',
        'last_modified_by_subscription' => 'lastModifiedBySubscription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'identifier' => 'setIdentifier',
        'passport' => 'setPassport',
        'number_of_travelers' => 'setNumberOfTravelers',
        'name' => 'setName',
        'additional_property' => 'setAdditionalProperty',
        'profile_id' => 'setProfileId',
        'id' => 'setId',
        'data_governance' => 'setDataGovernance',
        'created_date_time' => 'setCreatedDateTime',
        'last_modified' => 'setLastModified',
        'last_modified_by' => 'setLastModifiedBy',
        'created_by_subscription' => 'setCreatedBySubscription',
        'last_modified_by_subscription' => 'setLastModifiedBySubscription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'identifier' => 'getIdentifier',
        'passport' => 'getPassport',
        'number_of_travelers' => 'getNumberOfTravelers',
        'name' => 'getName',
        'additional_property' => 'getAdditionalProperty',
        'profile_id' => 'getProfileId',
        'id' => 'getId',
        'data_governance' => 'getDataGovernance',
        'created_date_time' => 'getCreatedDateTime',
        'last_modified' => 'getLastModified',
        'last_modified_by' => 'getLastModifiedBy',
        'created_by_subscription' => 'getCreatedBySubscription',
        'last_modified_by_subscription' => 'getLastModifiedBySubscription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['identifier'] = isset($data['identifier']) ? $data['identifier'] : null;
        $this->container['passport'] = isset($data['passport']) ? $data['passport'] : null;
        $this->container['number_of_travelers'] = isset($data['number_of_travelers']) ? $data['number_of_travelers'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['additional_property'] = isset($data['additional_property']) ? $data['additional_property'] : null;
        $this->container['profile_id'] = isset($data['profile_id']) ? $data['profile_id'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['data_governance'] = isset($data['data_governance']) ? $data['data_governance'] : null;
        $this->container['created_date_time'] = isset($data['created_date_time']) ? $data['created_date_time'] : null;
        $this->container['last_modified'] = isset($data['last_modified']) ? $data['last_modified'] : null;
        $this->container['last_modified_by'] = isset($data['last_modified_by']) ? $data['last_modified_by'] : null;
        $this->container['created_by_subscription'] = isset($data['created_by_subscription']) ? $data['created_by_subscription'] : null;
        $this->container['last_modified_by_subscription'] = isset($data['last_modified_by_subscription']) ? $data['last_modified_by_subscription'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets identifier
     *
     * @return string
     */
    public function getIdentifier()
    {
        return $this->container['identifier'];
    }

    /**
     * Sets identifier
     *
     * @param string $identifier identifier
     *
     * @return $this
     */
    public function setIdentifier($identifier)
    {
        $this->container['identifier'] = $identifier;

        return $this;
    }

    /**
     * Gets passport
     *
     * @return string
     */
    public function getPassport()
    {
        return $this->container['passport'];
    }

    /**
     * Sets passport
     *
     * @param string $passport passport
     *
     * @return $this
     */
    public function setPassport($passport)
    {
        $this->container['passport'] = $passport;

        return $this;
    }

    /**
     * Gets number_of_travelers
     *
     * @return int
     */
    public function getNumberOfTravelers()
    {
        return $this->container['number_of_travelers'];
    }

    /**
     * Sets number_of_travelers
     *
     * @param int $number_of_travelers number_of_travelers
     *
     * @return $this
     */
    public function setNumberOfTravelers($number_of_travelers)
    {
        $this->container['number_of_travelers'] = $number_of_travelers;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets additional_property
     *
     * @return \ProfileService\Client\Model\DsPropertyValueResponse[]
     */
    public function getAdditionalProperty()
    {
        return $this->container['additional_property'];
    }

    /**
     * Sets additional_property
     *
     * @param \ProfileService\Client\Model\DsPropertyValueResponse[] $additional_property additional_property
     *
     * @return $this
     */
    public function setAdditionalProperty($additional_property)
    {
        $this->container['additional_property'] = $additional_property;

        return $this;
    }

    /**
     * Gets profile_id
     *
     * @return string
     */
    public function getProfileId()
    {
        return $this->container['profile_id'];
    }

    /**
     * Sets profile_id
     *
     * @param string $profile_id profile_id
     *
     * @return $this
     */
    public function setProfileId($profile_id)
    {
        $this->container['profile_id'] = $profile_id;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets data_governance
     *
     * @return \ProfileService\Client\Model\DsDataGovernanceResponse
     */
    public function getDataGovernance()
    {
        return $this->container['data_governance'];
    }

    /**
     * Sets data_governance
     *
     * @param \ProfileService\Client\Model\DsDataGovernanceResponse $data_governance data_governance
     *
     * @return $this
     */
    public function setDataGovernance($data_governance)
    {
        $this->container['data_governance'] = $data_governance;

        return $this;
    }

    /**
     * Gets created_date_time
     *
     * @return \DateTime
     */
    public function getCreatedDateTime()
    {
        return $this->container['created_date_time'];
    }

    /**
     * Sets created_date_time
     *
     * @param \DateTime $created_date_time created_date_time
     *
     * @return $this
     */
    public function setCreatedDateTime($created_date_time)
    {
        $this->container['created_date_time'] = $created_date_time;

        return $this;
    }

    /**
     * Gets last_modified
     *
     * @return \DateTime
     */
    public function getLastModified()
    {
        return $this->container['last_modified'];
    }

    /**
     * Sets last_modified
     *
     * @param \DateTime $last_modified last_modified
     *
     * @return $this
     */
    public function setLastModified($last_modified)
    {
        $this->container['last_modified'] = $last_modified;

        return $this;
    }

    /**
     * Gets last_modified_by
     *
     * @return string
     */
    public function getLastModifiedBy()
    {
        return $this->container['last_modified_by'];
    }

    /**
     * Sets last_modified_by
     *
     * @param string $last_modified_by last_modified_by
     *
     * @return $this
     */
    public function setLastModifiedBy($last_modified_by)
    {
        $this->container['last_modified_by'] = $last_modified_by;

        return $this;
    }

    /**
     * Gets created_by_subscription
     *
     * @return string
     */
    public function getCreatedBySubscription()
    {
        return $this->container['created_by_subscription'];
    }

    /**
     * Sets created_by_subscription
     *
     * @param string $created_by_subscription created_by_subscription
     *
     * @return $this
     */
    public function setCreatedBySubscription($created_by_subscription)
    {
        $this->container['created_by_subscription'] = $created_by_subscription;

        return $this;
    }

    /**
     * Gets last_modified_by_subscription
     *
     * @return string
     */
    public function getLastModifiedBySubscription()
    {
        return $this->container['last_modified_by_subscription'];
    }

    /**
     * Sets last_modified_by_subscription
     *
     * @param string $last_modified_by_subscription last_modified_by_subscription
     *
     * @return $this
     */
    public function setLastModifiedBySubscription($last_modified_by_subscription)
    {
        $this->container['last_modified_by_subscription'] = $last_modified_by_subscription;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
