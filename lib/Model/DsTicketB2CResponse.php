<?php
/**
 * DsTicketB2CResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ProfileService-TEST
 *
 * Profile service test
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.20
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ProfileService\Client\Model;

use \ArrayAccess;
use \ProfileService\Client\ObjectSerializer;

/**
 * DsTicketB2CResponse Class Doc Comment
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DsTicketB2CResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TicketB2CResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'identifier' => 'string',
'name' => 'string',
'order_number' => 'string',
'order_item_number' => 'string',
'product' => '\ProfileService\Client\Model\DsProductVariantResponse',
'additional_type' => 'string',
'ticket_number' => 'string',
'booking_number' => 'string',
'ticket_token' => 'string',
'date_issued' => '\DateTime',
'issued_by' => '\ProfileService\Client\Model\DsPartnerSimplexResponse',
'price_currency' => 'string',
'price_category' => 'string',
'total_price' => 'double',
'under_name' => '\ProfileService\Client\Model\DsTravelerResponse',
'under_names' => '\ProfileService\Client\Model\DsTravelerResponse[]',
'valid_from' => '\DateTime',
'valid_until' => '\DateTime',
'ticket_token_id' => 'string',
'qr_code_token' => 'string',
'qr_code_content' => 'string',
'qr_code_content_is_binary' => 'bool',
'html_token' => 'string',
'image_token' => 'string',
'additional_property' => '\ProfileService\Client\Model\DsPropertyValueResponse[]',
'number_of_travelers' => 'int',
'partner_acronym' => 'string',
'profile_id' => 'string',
'id' => 'string',
'data_governance' => '\ProfileService\Client\Model\DsDataGovernanceResponse',
'created_date_time' => '\DateTime',
'last_modified' => '\DateTime',
'last_modified_by' => 'string',
'created_by_subscription' => 'string',
'last_modified_by_subscription' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'identifier' => null,
'name' => null,
'order_number' => null,
'order_item_number' => null,
'product' => null,
'additional_type' => null,
'ticket_number' => null,
'booking_number' => null,
'ticket_token' => null,
'date_issued' => 'date-time',
'issued_by' => null,
'price_currency' => null,
'price_category' => null,
'total_price' => 'double',
'under_name' => null,
'under_names' => null,
'valid_from' => 'date-time',
'valid_until' => 'date-time',
'ticket_token_id' => null,
'qr_code_token' => null,
'qr_code_content' => null,
'qr_code_content_is_binary' => null,
'html_token' => null,
'image_token' => null,
'additional_property' => null,
'number_of_travelers' => 'int32',
'partner_acronym' => null,
'profile_id' => null,
'id' => null,
'data_governance' => null,
'created_date_time' => 'date-time',
'last_modified' => 'date-time',
'last_modified_by' => null,
'created_by_subscription' => null,
'last_modified_by_subscription' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'identifier' => 'identifier',
'name' => 'name',
'order_number' => 'orderNumber',
'order_item_number' => 'orderItemNumber',
'product' => 'product',
'additional_type' => 'additionalType',
'ticket_number' => 'ticketNumber',
'booking_number' => 'bookingNumber',
'ticket_token' => 'ticketToken',
'date_issued' => 'dateIssued',
'issued_by' => 'issuedBy',
'price_currency' => 'priceCurrency',
'price_category' => 'priceCategory',
'total_price' => 'totalPrice',
'under_name' => 'underName',
'under_names' => 'underNames',
'valid_from' => 'validFrom',
'valid_until' => 'validUntil',
'ticket_token_id' => 'ticketTokenId',
'qr_code_token' => 'qrCodeToken',
'qr_code_content' => 'qrCodeContent',
'qr_code_content_is_binary' => 'qrCodeContentIsBinary',
'html_token' => 'htmlToken',
'image_token' => 'imageToken',
'additional_property' => 'additionalProperty',
'number_of_travelers' => 'numberOfTravelers',
'partner_acronym' => 'partnerAcronym',
'profile_id' => 'profileId',
'id' => '@id',
'data_governance' => 'dataGovernance',
'created_date_time' => 'createdDateTime',
'last_modified' => 'lastModified',
'last_modified_by' => 'lastModifiedBy',
'created_by_subscription' => 'createdBySubscription',
'last_modified_by_subscription' => 'lastModifiedBySubscription'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'identifier' => 'setIdentifier',
'name' => 'setName',
'order_number' => 'setOrderNumber',
'order_item_number' => 'setOrderItemNumber',
'product' => 'setProduct',
'additional_type' => 'setAdditionalType',
'ticket_number' => 'setTicketNumber',
'booking_number' => 'setBookingNumber',
'ticket_token' => 'setTicketToken',
'date_issued' => 'setDateIssued',
'issued_by' => 'setIssuedBy',
'price_currency' => 'setPriceCurrency',
'price_category' => 'setPriceCategory',
'total_price' => 'setTotalPrice',
'under_name' => 'setUnderName',
'under_names' => 'setUnderNames',
'valid_from' => 'setValidFrom',
'valid_until' => 'setValidUntil',
'ticket_token_id' => 'setTicketTokenId',
'qr_code_token' => 'setQrCodeToken',
'qr_code_content' => 'setQrCodeContent',
'qr_code_content_is_binary' => 'setQrCodeContentIsBinary',
'html_token' => 'setHtmlToken',
'image_token' => 'setImageToken',
'additional_property' => 'setAdditionalProperty',
'number_of_travelers' => 'setNumberOfTravelers',
'partner_acronym' => 'setPartnerAcronym',
'profile_id' => 'setProfileId',
'id' => 'setId',
'data_governance' => 'setDataGovernance',
'created_date_time' => 'setCreatedDateTime',
'last_modified' => 'setLastModified',
'last_modified_by' => 'setLastModifiedBy',
'created_by_subscription' => 'setCreatedBySubscription',
'last_modified_by_subscription' => 'setLastModifiedBySubscription'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'identifier' => 'getIdentifier',
'name' => 'getName',
'order_number' => 'getOrderNumber',
'order_item_number' => 'getOrderItemNumber',
'product' => 'getProduct',
'additional_type' => 'getAdditionalType',
'ticket_number' => 'getTicketNumber',
'booking_number' => 'getBookingNumber',
'ticket_token' => 'getTicketToken',
'date_issued' => 'getDateIssued',
'issued_by' => 'getIssuedBy',
'price_currency' => 'getPriceCurrency',
'price_category' => 'getPriceCategory',
'total_price' => 'getTotalPrice',
'under_name' => 'getUnderName',
'under_names' => 'getUnderNames',
'valid_from' => 'getValidFrom',
'valid_until' => 'getValidUntil',
'ticket_token_id' => 'getTicketTokenId',
'qr_code_token' => 'getQrCodeToken',
'qr_code_content' => 'getQrCodeContent',
'qr_code_content_is_binary' => 'getQrCodeContentIsBinary',
'html_token' => 'getHtmlToken',
'image_token' => 'getImageToken',
'additional_property' => 'getAdditionalProperty',
'number_of_travelers' => 'getNumberOfTravelers',
'partner_acronym' => 'getPartnerAcronym',
'profile_id' => 'getProfileId',
'id' => 'getId',
'data_governance' => 'getDataGovernance',
'created_date_time' => 'getCreatedDateTime',
'last_modified' => 'getLastModified',
'last_modified_by' => 'getLastModifiedBy',
'created_by_subscription' => 'getCreatedBySubscription',
'last_modified_by_subscription' => 'getLastModifiedBySubscription'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['identifier'] = isset($data['identifier']) ? $data['identifier'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['order_item_number'] = isset($data['order_item_number']) ? $data['order_item_number'] : null;
        $this->container['product'] = isset($data['product']) ? $data['product'] : null;
        $this->container['additional_type'] = isset($data['additional_type']) ? $data['additional_type'] : null;
        $this->container['ticket_number'] = isset($data['ticket_number']) ? $data['ticket_number'] : null;
        $this->container['booking_number'] = isset($data['booking_number']) ? $data['booking_number'] : null;
        $this->container['ticket_token'] = isset($data['ticket_token']) ? $data['ticket_token'] : null;
        $this->container['date_issued'] = isset($data['date_issued']) ? $data['date_issued'] : null;
        $this->container['issued_by'] = isset($data['issued_by']) ? $data['issued_by'] : null;
        $this->container['price_currency'] = isset($data['price_currency']) ? $data['price_currency'] : null;
        $this->container['price_category'] = isset($data['price_category']) ? $data['price_category'] : null;
        $this->container['total_price'] = isset($data['total_price']) ? $data['total_price'] : null;
        $this->container['under_name'] = isset($data['under_name']) ? $data['under_name'] : null;
        $this->container['under_names'] = isset($data['under_names']) ? $data['under_names'] : null;
        $this->container['valid_from'] = isset($data['valid_from']) ? $data['valid_from'] : null;
        $this->container['valid_until'] = isset($data['valid_until']) ? $data['valid_until'] : null;
        $this->container['ticket_token_id'] = isset($data['ticket_token_id']) ? $data['ticket_token_id'] : null;
        $this->container['qr_code_token'] = isset($data['qr_code_token']) ? $data['qr_code_token'] : null;
        $this->container['qr_code_content'] = isset($data['qr_code_content']) ? $data['qr_code_content'] : null;
        $this->container['qr_code_content_is_binary'] = isset($data['qr_code_content_is_binary']) ? $data['qr_code_content_is_binary'] : null;
        $this->container['html_token'] = isset($data['html_token']) ? $data['html_token'] : null;
        $this->container['image_token'] = isset($data['image_token']) ? $data['image_token'] : null;
        $this->container['additional_property'] = isset($data['additional_property']) ? $data['additional_property'] : null;
        $this->container['number_of_travelers'] = isset($data['number_of_travelers']) ? $data['number_of_travelers'] : null;
        $this->container['partner_acronym'] = isset($data['partner_acronym']) ? $data['partner_acronym'] : null;
        $this->container['profile_id'] = isset($data['profile_id']) ? $data['profile_id'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['data_governance'] = isset($data['data_governance']) ? $data['data_governance'] : null;
        $this->container['created_date_time'] = isset($data['created_date_time']) ? $data['created_date_time'] : null;
        $this->container['last_modified'] = isset($data['last_modified']) ? $data['last_modified'] : null;
        $this->container['last_modified_by'] = isset($data['last_modified_by']) ? $data['last_modified_by'] : null;
        $this->container['created_by_subscription'] = isset($data['created_by_subscription']) ? $data['created_by_subscription'] : null;
        $this->container['last_modified_by_subscription'] = isset($data['last_modified_by_subscription']) ? $data['last_modified_by_subscription'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets identifier
     *
     * @return string
     */
    public function getIdentifier()
    {
        return $this->container['identifier'];
    }

    /**
     * Sets identifier
     *
     * @param string $identifier identifier
     *
     * @return $this
     */
    public function setIdentifier($identifier)
    {
        $this->container['identifier'] = $identifier;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return string
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param string $order_number order_number
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets order_item_number
     *
     * @return string
     */
    public function getOrderItemNumber()
    {
        return $this->container['order_item_number'];
    }

    /**
     * Sets order_item_number
     *
     * @param string $order_item_number order_item_number
     *
     * @return $this
     */
    public function setOrderItemNumber($order_item_number)
    {
        $this->container['order_item_number'] = $order_item_number;

        return $this;
    }

    /**
     * Gets product
     *
     * @return \ProfileService\Client\Model\DsProductVariantResponse
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param \ProfileService\Client\Model\DsProductVariantResponse $product product
     *
     * @return $this
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets additional_type
     *
     * @return string
     */
    public function getAdditionalType()
    {
        return $this->container['additional_type'];
    }

    /**
     * Sets additional_type
     *
     * @param string $additional_type additional_type
     *
     * @return $this
     */
    public function setAdditionalType($additional_type)
    {
        $this->container['additional_type'] = $additional_type;

        return $this;
    }

    /**
     * Gets ticket_number
     *
     * @return string
     */
    public function getTicketNumber()
    {
        return $this->container['ticket_number'];
    }

    /**
     * Sets ticket_number
     *
     * @param string $ticket_number ticket_number
     *
     * @return $this
     */
    public function setTicketNumber($ticket_number)
    {
        $this->container['ticket_number'] = $ticket_number;

        return $this;
    }

    /**
     * Gets booking_number
     *
     * @return string
     */
    public function getBookingNumber()
    {
        return $this->container['booking_number'];
    }

    /**
     * Sets booking_number
     *
     * @param string $booking_number booking_number
     *
     * @return $this
     */
    public function setBookingNumber($booking_number)
    {
        $this->container['booking_number'] = $booking_number;

        return $this;
    }

    /**
     * Gets ticket_token
     *
     * @return string
     */
    public function getTicketToken()
    {
        return $this->container['ticket_token'];
    }

    /**
     * Sets ticket_token
     *
     * @param string $ticket_token ticket_token
     *
     * @return $this
     */
    public function setTicketToken($ticket_token)
    {
        $this->container['ticket_token'] = $ticket_token;

        return $this;
    }

    /**
     * Gets date_issued
     *
     * @return \DateTime
     */
    public function getDateIssued()
    {
        return $this->container['date_issued'];
    }

    /**
     * Sets date_issued
     *
     * @param \DateTime $date_issued date_issued
     *
     * @return $this
     */
    public function setDateIssued($date_issued)
    {
        $this->container['date_issued'] = $date_issued;

        return $this;
    }

    /**
     * Gets issued_by
     *
     * @return \ProfileService\Client\Model\DsPartnerSimplexResponse
     */
    public function getIssuedBy()
    {
        return $this->container['issued_by'];
    }

    /**
     * Sets issued_by
     *
     * @param \ProfileService\Client\Model\DsPartnerSimplexResponse $issued_by issued_by
     *
     * @return $this
     */
    public function setIssuedBy($issued_by)
    {
        $this->container['issued_by'] = $issued_by;

        return $this;
    }

    /**
     * Gets price_currency
     *
     * @return string
     */
    public function getPriceCurrency()
    {
        return $this->container['price_currency'];
    }

    /**
     * Sets price_currency
     *
     * @param string $price_currency price_currency
     *
     * @return $this
     */
    public function setPriceCurrency($price_currency)
    {
        $this->container['price_currency'] = $price_currency;

        return $this;
    }

    /**
     * Gets price_category
     *
     * @return string
     */
    public function getPriceCategory()
    {
        return $this->container['price_category'];
    }

    /**
     * Sets price_category
     *
     * @param string $price_category price_category
     *
     * @return $this
     */
    public function setPriceCategory($price_category)
    {
        $this->container['price_category'] = $price_category;

        return $this;
    }

    /**
     * Gets total_price
     *
     * @return double
     */
    public function getTotalPrice()
    {
        return $this->container['total_price'];
    }

    /**
     * Sets total_price
     *
     * @param double $total_price total_price
     *
     * @return $this
     */
    public function setTotalPrice($total_price)
    {
        $this->container['total_price'] = $total_price;

        return $this;
    }

    /**
     * Gets under_name
     *
     * @return \ProfileService\Client\Model\DsTravelerResponse
     */
    public function getUnderName()
    {
        return $this->container['under_name'];
    }

    /**
     * Sets under_name
     *
     * @param \ProfileService\Client\Model\DsTravelerResponse $under_name under_name
     *
     * @return $this
     */
    public function setUnderName($under_name)
    {
        $this->container['under_name'] = $under_name;

        return $this;
    }

    /**
     * Gets under_names
     *
     * @return \ProfileService\Client\Model\DsTravelerResponse[]
     */
    public function getUnderNames()
    {
        return $this->container['under_names'];
    }

    /**
     * Sets under_names
     *
     * @param \ProfileService\Client\Model\DsTravelerResponse[] $under_names under_names
     *
     * @return $this
     */
    public function setUnderNames($under_names)
    {
        $this->container['under_names'] = $under_names;

        return $this;
    }

    /**
     * Gets valid_from
     *
     * @return \DateTime
     */
    public function getValidFrom()
    {
        return $this->container['valid_from'];
    }

    /**
     * Sets valid_from
     *
     * @param \DateTime $valid_from valid_from
     *
     * @return $this
     */
    public function setValidFrom($valid_from)
    {
        $this->container['valid_from'] = $valid_from;

        return $this;
    }

    /**
     * Gets valid_until
     *
     * @return \DateTime
     */
    public function getValidUntil()
    {
        return $this->container['valid_until'];
    }

    /**
     * Sets valid_until
     *
     * @param \DateTime $valid_until valid_until
     *
     * @return $this
     */
    public function setValidUntil($valid_until)
    {
        $this->container['valid_until'] = $valid_until;

        return $this;
    }

    /**
     * Gets ticket_token_id
     *
     * @return string
     */
    public function getTicketTokenId()
    {
        return $this->container['ticket_token_id'];
    }

    /**
     * Sets ticket_token_id
     *
     * @param string $ticket_token_id ticket_token_id
     *
     * @return $this
     */
    public function setTicketTokenId($ticket_token_id)
    {
        $this->container['ticket_token_id'] = $ticket_token_id;

        return $this;
    }

    /**
     * Gets qr_code_token
     *
     * @return string
     */
    public function getQrCodeToken()
    {
        return $this->container['qr_code_token'];
    }

    /**
     * Sets qr_code_token
     *
     * @param string $qr_code_token qr_code_token
     *
     * @return $this
     */
    public function setQrCodeToken($qr_code_token)
    {
        $this->container['qr_code_token'] = $qr_code_token;

        return $this;
    }

    /**
     * Gets qr_code_content
     *
     * @return string
     */
    public function getQrCodeContent()
    {
        return $this->container['qr_code_content'];
    }

    /**
     * Sets qr_code_content
     *
     * @param string $qr_code_content qr_code_content
     *
     * @return $this
     */
    public function setQrCodeContent($qr_code_content)
    {
        $this->container['qr_code_content'] = $qr_code_content;

        return $this;
    }

    /**
     * Gets qr_code_content_is_binary
     *
     * @return bool
     */
    public function getQrCodeContentIsBinary()
    {
        return $this->container['qr_code_content_is_binary'];
    }

    /**
     * Sets qr_code_content_is_binary
     *
     * @param bool $qr_code_content_is_binary qr_code_content_is_binary
     *
     * @return $this
     */
    public function setQrCodeContentIsBinary($qr_code_content_is_binary)
    {
        $this->container['qr_code_content_is_binary'] = $qr_code_content_is_binary;

        return $this;
    }

    /**
     * Gets html_token
     *
     * @return string
     */
    public function getHtmlToken()
    {
        return $this->container['html_token'];
    }

    /**
     * Sets html_token
     *
     * @param string $html_token html_token
     *
     * @return $this
     */
    public function setHtmlToken($html_token)
    {
        $this->container['html_token'] = $html_token;

        return $this;
    }

    /**
     * Gets image_token
     *
     * @return string
     */
    public function getImageToken()
    {
        return $this->container['image_token'];
    }

    /**
     * Sets image_token
     *
     * @param string $image_token image_token
     *
     * @return $this
     */
    public function setImageToken($image_token)
    {
        $this->container['image_token'] = $image_token;

        return $this;
    }

    /**
     * Gets additional_property
     *
     * @return \ProfileService\Client\Model\DsPropertyValueResponse[]
     */
    public function getAdditionalProperty()
    {
        return $this->container['additional_property'];
    }

    /**
     * Sets additional_property
     *
     * @param \ProfileService\Client\Model\DsPropertyValueResponse[] $additional_property additional_property
     *
     * @return $this
     */
    public function setAdditionalProperty($additional_property)
    {
        $this->container['additional_property'] = $additional_property;

        return $this;
    }

    /**
     * Gets number_of_travelers
     *
     * @return int
     */
    public function getNumberOfTravelers()
    {
        return $this->container['number_of_travelers'];
    }

    /**
     * Sets number_of_travelers
     *
     * @param int $number_of_travelers number_of_travelers
     *
     * @return $this
     */
    public function setNumberOfTravelers($number_of_travelers)
    {
        $this->container['number_of_travelers'] = $number_of_travelers;

        return $this;
    }

    /**
     * Gets partner_acronym
     *
     * @return string
     */
    public function getPartnerAcronym()
    {
        return $this->container['partner_acronym'];
    }

    /**
     * Sets partner_acronym
     *
     * @param string $partner_acronym partner_acronym
     *
     * @return $this
     */
    public function setPartnerAcronym($partner_acronym)
    {
        $this->container['partner_acronym'] = $partner_acronym;

        return $this;
    }

    /**
     * Gets profile_id
     *
     * @return string
     */
    public function getProfileId()
    {
        return $this->container['profile_id'];
    }

    /**
     * Sets profile_id
     *
     * @param string $profile_id profile_id
     *
     * @return $this
     */
    public function setProfileId($profile_id)
    {
        $this->container['profile_id'] = $profile_id;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets data_governance
     *
     * @return \ProfileService\Client\Model\DsDataGovernanceResponse
     */
    public function getDataGovernance()
    {
        return $this->container['data_governance'];
    }

    /**
     * Sets data_governance
     *
     * @param \ProfileService\Client\Model\DsDataGovernanceResponse $data_governance data_governance
     *
     * @return $this
     */
    public function setDataGovernance($data_governance)
    {
        $this->container['data_governance'] = $data_governance;

        return $this;
    }

    /**
     * Gets created_date_time
     *
     * @return \DateTime
     */
    public function getCreatedDateTime()
    {
        return $this->container['created_date_time'];
    }

    /**
     * Sets created_date_time
     *
     * @param \DateTime $created_date_time created_date_time
     *
     * @return $this
     */
    public function setCreatedDateTime($created_date_time)
    {
        $this->container['created_date_time'] = $created_date_time;

        return $this;
    }

    /**
     * Gets last_modified
     *
     * @return \DateTime
     */
    public function getLastModified()
    {
        return $this->container['last_modified'];
    }

    /**
     * Sets last_modified
     *
     * @param \DateTime $last_modified last_modified
     *
     * @return $this
     */
    public function setLastModified($last_modified)
    {
        $this->container['last_modified'] = $last_modified;

        return $this;
    }

    /**
     * Gets last_modified_by
     *
     * @return string
     */
    public function getLastModifiedBy()
    {
        return $this->container['last_modified_by'];
    }

    /**
     * Sets last_modified_by
     *
     * @param string $last_modified_by last_modified_by
     *
     * @return $this
     */
    public function setLastModifiedBy($last_modified_by)
    {
        $this->container['last_modified_by'] = $last_modified_by;

        return $this;
    }

    /**
     * Gets created_by_subscription
     *
     * @return string
     */
    public function getCreatedBySubscription()
    {
        return $this->container['created_by_subscription'];
    }

    /**
     * Sets created_by_subscription
     *
     * @param string $created_by_subscription created_by_subscription
     *
     * @return $this
     */
    public function setCreatedBySubscription($created_by_subscription)
    {
        $this->container['created_by_subscription'] = $created_by_subscription;

        return $this;
    }

    /**
     * Gets last_modified_by_subscription
     *
     * @return string
     */
    public function getLastModifiedBySubscription()
    {
        return $this->container['last_modified_by_subscription'];
    }

    /**
     * Sets last_modified_by_subscription
     *
     * @param string $last_modified_by_subscription last_modified_by_subscription
     *
     * @return $this
     */
    public function setLastModifiedBySubscription($last_modified_by_subscription)
    {
        $this->container['last_modified_by_subscription'] = $last_modified_by_subscription;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
