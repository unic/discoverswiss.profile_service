<?php
/**
 * DsOrderItemResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ProfileService-TEST
 *
 * Profile service
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ProfileService\Client\Model;

use \ArrayAccess;
use \ProfileService\Client\ObjectSerializer;

/**
 * DsOrderItemResponse Class Doc Comment
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DsOrderItemResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'OrderItemResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_item_number' => 'string',
        'parent_order_item_number' => 'string',
        'order_item_status' => 'string',
        'order_item_status_text' => 'string',
        'error_code' => 'int',
        'order_quantity' => 'int',
        'ordered_item' => '\ProfileService\Client\Model\DsProductConfigurationResponse',
        'order_delivery' => 'string',
        'order_item_delivery' => '\ProfileService\Client\Model\DsOrderItemDeliveryResponse',
        'amount' => 'double',
        'amount_chf' => 'double',
        'tax' => 'double',
        'tax_chf' => 'double',
        'child_items_total_amount' => 'double',
        'child_items_total_amount_chf' => 'double',
        'child_items_total_tax_chf' => 'double',
        'currency' => 'string',
        'hide_amount' => 'bool',
        'ticket' => '\ProfileService\Client\Model\DsTicketSimplexResponse[]',
        'offer_bundle_id' => 'string',
        'additional_property' => '\ProfileService\Client\Model\DsPropertyValueResponse[]',
        'supporting_document' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_item_number' => null,
        'parent_order_item_number' => null,
        'order_item_status' => null,
        'order_item_status_text' => null,
        'error_code' => 'int32',
        'order_quantity' => 'int32',
        'ordered_item' => null,
        'order_delivery' => null,
        'order_item_delivery' => null,
        'amount' => 'double',
        'amount_chf' => 'double',
        'tax' => 'double',
        'tax_chf' => 'double',
        'child_items_total_amount' => 'double',
        'child_items_total_amount_chf' => 'double',
        'child_items_total_tax_chf' => 'double',
        'currency' => null,
        'hide_amount' => null,
        'ticket' => null,
        'offer_bundle_id' => null,
        'additional_property' => null,
        'supporting_document' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_item_number' => 'orderItemNumber',
        'parent_order_item_number' => 'parentOrderItemNumber',
        'order_item_status' => 'orderItemStatus',
        'order_item_status_text' => 'orderItemStatusText',
        'error_code' => 'errorCode',
        'order_quantity' => 'orderQuantity',
        'ordered_item' => 'orderedItem',
        'order_delivery' => 'orderDelivery',
        'order_item_delivery' => 'orderItemDelivery',
        'amount' => 'amount',
        'amount_chf' => 'amountCHF',
        'tax' => 'tax',
        'tax_chf' => 'taxCHF',
        'child_items_total_amount' => 'childItemsTotalAmount',
        'child_items_total_amount_chf' => 'childItemsTotalAmountCHF',
        'child_items_total_tax_chf' => 'childItemsTotalTaxCHF',
        'currency' => 'currency',
        'hide_amount' => 'hideAmount',
        'ticket' => 'ticket',
        'offer_bundle_id' => 'offerBundleId',
        'additional_property' => 'additionalProperty',
        'supporting_document' => 'supportingDocument'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_item_number' => 'setOrderItemNumber',
        'parent_order_item_number' => 'setParentOrderItemNumber',
        'order_item_status' => 'setOrderItemStatus',
        'order_item_status_text' => 'setOrderItemStatusText',
        'error_code' => 'setErrorCode',
        'order_quantity' => 'setOrderQuantity',
        'ordered_item' => 'setOrderedItem',
        'order_delivery' => 'setOrderDelivery',
        'order_item_delivery' => 'setOrderItemDelivery',
        'amount' => 'setAmount',
        'amount_chf' => 'setAmountChf',
        'tax' => 'setTax',
        'tax_chf' => 'setTaxChf',
        'child_items_total_amount' => 'setChildItemsTotalAmount',
        'child_items_total_amount_chf' => 'setChildItemsTotalAmountChf',
        'child_items_total_tax_chf' => 'setChildItemsTotalTaxChf',
        'currency' => 'setCurrency',
        'hide_amount' => 'setHideAmount',
        'ticket' => 'setTicket',
        'offer_bundle_id' => 'setOfferBundleId',
        'additional_property' => 'setAdditionalProperty',
        'supporting_document' => 'setSupportingDocument'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_item_number' => 'getOrderItemNumber',
        'parent_order_item_number' => 'getParentOrderItemNumber',
        'order_item_status' => 'getOrderItemStatus',
        'order_item_status_text' => 'getOrderItemStatusText',
        'error_code' => 'getErrorCode',
        'order_quantity' => 'getOrderQuantity',
        'ordered_item' => 'getOrderedItem',
        'order_delivery' => 'getOrderDelivery',
        'order_item_delivery' => 'getOrderItemDelivery',
        'amount' => 'getAmount',
        'amount_chf' => 'getAmountChf',
        'tax' => 'getTax',
        'tax_chf' => 'getTaxChf',
        'child_items_total_amount' => 'getChildItemsTotalAmount',
        'child_items_total_amount_chf' => 'getChildItemsTotalAmountChf',
        'child_items_total_tax_chf' => 'getChildItemsTotalTaxChf',
        'currency' => 'getCurrency',
        'hide_amount' => 'getHideAmount',
        'ticket' => 'getTicket',
        'offer_bundle_id' => 'getOfferBundleId',
        'additional_property' => 'getAdditionalProperty',
        'supporting_document' => 'getSupportingDocument'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_item_number'] = isset($data['order_item_number']) ? $data['order_item_number'] : null;
        $this->container['parent_order_item_number'] = isset($data['parent_order_item_number']) ? $data['parent_order_item_number'] : null;
        $this->container['order_item_status'] = isset($data['order_item_status']) ? $data['order_item_status'] : null;
        $this->container['order_item_status_text'] = isset($data['order_item_status_text']) ? $data['order_item_status_text'] : null;
        $this->container['error_code'] = isset($data['error_code']) ? $data['error_code'] : null;
        $this->container['order_quantity'] = isset($data['order_quantity']) ? $data['order_quantity'] : null;
        $this->container['ordered_item'] = isset($data['ordered_item']) ? $data['ordered_item'] : null;
        $this->container['order_delivery'] = isset($data['order_delivery']) ? $data['order_delivery'] : null;
        $this->container['order_item_delivery'] = isset($data['order_item_delivery']) ? $data['order_item_delivery'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['amount_chf'] = isset($data['amount_chf']) ? $data['amount_chf'] : null;
        $this->container['tax'] = isset($data['tax']) ? $data['tax'] : null;
        $this->container['tax_chf'] = isset($data['tax_chf']) ? $data['tax_chf'] : null;
        $this->container['child_items_total_amount'] = isset($data['child_items_total_amount']) ? $data['child_items_total_amount'] : null;
        $this->container['child_items_total_amount_chf'] = isset($data['child_items_total_amount_chf']) ? $data['child_items_total_amount_chf'] : null;
        $this->container['child_items_total_tax_chf'] = isset($data['child_items_total_tax_chf']) ? $data['child_items_total_tax_chf'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['hide_amount'] = isset($data['hide_amount']) ? $data['hide_amount'] : null;
        $this->container['ticket'] = isset($data['ticket']) ? $data['ticket'] : null;
        $this->container['offer_bundle_id'] = isset($data['offer_bundle_id']) ? $data['offer_bundle_id'] : null;
        $this->container['additional_property'] = isset($data['additional_property']) ? $data['additional_property'] : null;
        $this->container['supporting_document'] = isset($data['supporting_document']) ? $data['supporting_document'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_item_number
     *
     * @return string
     */
    public function getOrderItemNumber()
    {
        return $this->container['order_item_number'];
    }

    /**
     * Sets order_item_number
     *
     * @param string $order_item_number order_item_number
     *
     * @return $this
     */
    public function setOrderItemNumber($order_item_number)
    {
        $this->container['order_item_number'] = $order_item_number;

        return $this;
    }

    /**
     * Gets parent_order_item_number
     *
     * @return string
     */
    public function getParentOrderItemNumber()
    {
        return $this->container['parent_order_item_number'];
    }

    /**
     * Sets parent_order_item_number
     *
     * @param string $parent_order_item_number parent_order_item_number
     *
     * @return $this
     */
    public function setParentOrderItemNumber($parent_order_item_number)
    {
        $this->container['parent_order_item_number'] = $parent_order_item_number;

        return $this;
    }

    /**
     * Gets order_item_status
     *
     * @return string
     */
    public function getOrderItemStatus()
    {
        return $this->container['order_item_status'];
    }

    /**
     * Sets order_item_status
     *
     * @param string $order_item_status order_item_status
     *
     * @return $this
     */
    public function setOrderItemStatus($order_item_status)
    {
        $this->container['order_item_status'] = $order_item_status;

        return $this;
    }

    /**
     * Gets order_item_status_text
     *
     * @return string
     */
    public function getOrderItemStatusText()
    {
        return $this->container['order_item_status_text'];
    }

    /**
     * Sets order_item_status_text
     *
     * @param string $order_item_status_text order_item_status_text
     *
     * @return $this
     */
    public function setOrderItemStatusText($order_item_status_text)
    {
        $this->container['order_item_status_text'] = $order_item_status_text;

        return $this;
    }

    /**
     * Gets error_code
     *
     * @return int
     */
    public function getErrorCode()
    {
        return $this->container['error_code'];
    }

    /**
     * Sets error_code
     *
     * @param int $error_code error_code
     *
     * @return $this
     */
    public function setErrorCode($error_code)
    {
        $this->container['error_code'] = $error_code;

        return $this;
    }

    /**
     * Gets order_quantity
     *
     * @return int
     */
    public function getOrderQuantity()
    {
        return $this->container['order_quantity'];
    }

    /**
     * Sets order_quantity
     *
     * @param int $order_quantity order_quantity
     *
     * @return $this
     */
    public function setOrderQuantity($order_quantity)
    {
        $this->container['order_quantity'] = $order_quantity;

        return $this;
    }

    /**
     * Gets ordered_item
     *
     * @return \ProfileService\Client\Model\DsProductConfigurationResponse
     */
    public function getOrderedItem()
    {
        return $this->container['ordered_item'];
    }

    /**
     * Sets ordered_item
     *
     * @param \ProfileService\Client\Model\DsProductConfigurationResponse $ordered_item ordered_item
     *
     * @return $this
     */
    public function setOrderedItem($ordered_item)
    {
        $this->container['ordered_item'] = $ordered_item;

        return $this;
    }

    /**
     * Gets order_delivery
     *
     * @return string
     */
    public function getOrderDelivery()
    {
        return $this->container['order_delivery'];
    }

    /**
     * Sets order_delivery
     *
     * @param string $order_delivery order_delivery
     *
     * @return $this
     */
    public function setOrderDelivery($order_delivery)
    {
        $this->container['order_delivery'] = $order_delivery;

        return $this;
    }

    /**
     * Gets order_item_delivery
     *
     * @return \ProfileService\Client\Model\DsOrderItemDeliveryResponse
     */
    public function getOrderItemDelivery()
    {
        return $this->container['order_item_delivery'];
    }

    /**
     * Sets order_item_delivery
     *
     * @param \ProfileService\Client\Model\DsOrderItemDeliveryResponse $order_item_delivery order_item_delivery
     *
     * @return $this
     */
    public function setOrderItemDelivery($order_item_delivery)
    {
        $this->container['order_item_delivery'] = $order_item_delivery;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount amount
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets amount_chf
     *
     * @return double
     */
    public function getAmountChf()
    {
        return $this->container['amount_chf'];
    }

    /**
     * Sets amount_chf
     *
     * @param double $amount_chf amount_chf
     *
     * @return $this
     */
    public function setAmountChf($amount_chf)
    {
        $this->container['amount_chf'] = $amount_chf;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return double
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param double $tax tax
     *
     * @return $this
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets tax_chf
     *
     * @return double
     */
    public function getTaxChf()
    {
        return $this->container['tax_chf'];
    }

    /**
     * Sets tax_chf
     *
     * @param double $tax_chf tax_chf
     *
     * @return $this
     */
    public function setTaxChf($tax_chf)
    {
        $this->container['tax_chf'] = $tax_chf;

        return $this;
    }

    /**
     * Gets child_items_total_amount
     *
     * @return double
     */
    public function getChildItemsTotalAmount()
    {
        return $this->container['child_items_total_amount'];
    }

    /**
     * Sets child_items_total_amount
     *
     * @param double $child_items_total_amount child_items_total_amount
     *
     * @return $this
     */
    public function setChildItemsTotalAmount($child_items_total_amount)
    {
        $this->container['child_items_total_amount'] = $child_items_total_amount;

        return $this;
    }

    /**
     * Gets child_items_total_amount_chf
     *
     * @return double
     */
    public function getChildItemsTotalAmountChf()
    {
        return $this->container['child_items_total_amount_chf'];
    }

    /**
     * Sets child_items_total_amount_chf
     *
     * @param double $child_items_total_amount_chf child_items_total_amount_chf
     *
     * @return $this
     */
    public function setChildItemsTotalAmountChf($child_items_total_amount_chf)
    {
        $this->container['child_items_total_amount_chf'] = $child_items_total_amount_chf;

        return $this;
    }

    /**
     * Gets child_items_total_tax_chf
     *
     * @return double
     */
    public function getChildItemsTotalTaxChf()
    {
        return $this->container['child_items_total_tax_chf'];
    }

    /**
     * Sets child_items_total_tax_chf
     *
     * @param double $child_items_total_tax_chf child_items_total_tax_chf
     *
     * @return $this
     */
    public function setChildItemsTotalTaxChf($child_items_total_tax_chf)
    {
        $this->container['child_items_total_tax_chf'] = $child_items_total_tax_chf;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets hide_amount
     *
     * @return bool
     */
    public function getHideAmount()
    {
        return $this->container['hide_amount'];
    }

    /**
     * Sets hide_amount
     *
     * @param bool $hide_amount hide_amount
     *
     * @return $this
     */
    public function setHideAmount($hide_amount)
    {
        $this->container['hide_amount'] = $hide_amount;

        return $this;
    }

    /**
     * Gets ticket
     *
     * @return \ProfileService\Client\Model\DsTicketSimplexResponse[]
     */
    public function getTicket()
    {
        return $this->container['ticket'];
    }

    /**
     * Sets ticket
     *
     * @param \ProfileService\Client\Model\DsTicketSimplexResponse[] $ticket ticket
     *
     * @return $this
     */
    public function setTicket($ticket)
    {
        $this->container['ticket'] = $ticket;

        return $this;
    }

    /**
     * Gets offer_bundle_id
     *
     * @return string
     */
    public function getOfferBundleId()
    {
        return $this->container['offer_bundle_id'];
    }

    /**
     * Sets offer_bundle_id
     *
     * @param string $offer_bundle_id offer_bundle_id
     *
     * @return $this
     */
    public function setOfferBundleId($offer_bundle_id)
    {
        $this->container['offer_bundle_id'] = $offer_bundle_id;

        return $this;
    }

    /**
     * Gets additional_property
     *
     * @return \ProfileService\Client\Model\DsPropertyValueResponse[]
     */
    public function getAdditionalProperty()
    {
        return $this->container['additional_property'];
    }

    /**
     * Sets additional_property
     *
     * @param \ProfileService\Client\Model\DsPropertyValueResponse[] $additional_property additional_property
     *
     * @return $this
     */
    public function setAdditionalProperty($additional_property)
    {
        $this->container['additional_property'] = $additional_property;

        return $this;
    }

    /**
     * Gets supporting_document
     *
     * @return string[]
     */
    public function getSupportingDocument()
    {
        return $this->container['supporting_document'];
    }

    /**
     * Sets supporting_document
     *
     * @param string[] $supporting_document supporting_document
     *
     * @return $this
     */
    public function setSupportingDocument($supporting_document)
    {
        $this->container['supporting_document'] = $supporting_document;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
