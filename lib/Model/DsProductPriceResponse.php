<?php
/**
 * DsProductPriceResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ProfileService-TEST
 *
 * Profile service test
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.20
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ProfileService\Client\Model;

use \ArrayAccess;
use \ProfileService\Client\ObjectSerializer;

/**
 * DsProductPriceResponse Class Doc Comment
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DsProductPriceResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ProductPriceResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'price_category_id' => 'string',
'price_category_name' => 'string',
'price_category_type' => 'string',
'price_chf' => 'double',
'price' => 'double',
'currency' => 'string',
'max_allowed_age' => 'int',
'min_allowed_age' => 'int',
'reduction' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'price_category_id' => null,
'price_category_name' => null,
'price_category_type' => null,
'price_chf' => 'double',
'price' => 'double',
'currency' => null,
'max_allowed_age' => 'int32',
'min_allowed_age' => 'int32',
'reduction' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'price_category_id' => 'priceCategoryId',
'price_category_name' => 'priceCategoryName',
'price_category_type' => 'priceCategoryType',
'price_chf' => 'priceCHF',
'price' => 'price',
'currency' => 'currency',
'max_allowed_age' => 'maxAllowedAge',
'min_allowed_age' => 'minAllowedAge',
'reduction' => 'reduction'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'price_category_id' => 'setPriceCategoryId',
'price_category_name' => 'setPriceCategoryName',
'price_category_type' => 'setPriceCategoryType',
'price_chf' => 'setPriceChf',
'price' => 'setPrice',
'currency' => 'setCurrency',
'max_allowed_age' => 'setMaxAllowedAge',
'min_allowed_age' => 'setMinAllowedAge',
'reduction' => 'setReduction'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'price_category_id' => 'getPriceCategoryId',
'price_category_name' => 'getPriceCategoryName',
'price_category_type' => 'getPriceCategoryType',
'price_chf' => 'getPriceChf',
'price' => 'getPrice',
'currency' => 'getCurrency',
'max_allowed_age' => 'getMaxAllowedAge',
'min_allowed_age' => 'getMinAllowedAge',
'reduction' => 'getReduction'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['price_category_id'] = isset($data['price_category_id']) ? $data['price_category_id'] : null;
        $this->container['price_category_name'] = isset($data['price_category_name']) ? $data['price_category_name'] : null;
        $this->container['price_category_type'] = isset($data['price_category_type']) ? $data['price_category_type'] : null;
        $this->container['price_chf'] = isset($data['price_chf']) ? $data['price_chf'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['max_allowed_age'] = isset($data['max_allowed_age']) ? $data['max_allowed_age'] : null;
        $this->container['min_allowed_age'] = isset($data['min_allowed_age']) ? $data['min_allowed_age'] : null;
        $this->container['reduction'] = isset($data['reduction']) ? $data['reduction'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets price_category_id
     *
     * @return string
     */
    public function getPriceCategoryId()
    {
        return $this->container['price_category_id'];
    }

    /**
     * Sets price_category_id
     *
     * @param string $price_category_id price_category_id
     *
     * @return $this
     */
    public function setPriceCategoryId($price_category_id)
    {
        $this->container['price_category_id'] = $price_category_id;

        return $this;
    }

    /**
     * Gets price_category_name
     *
     * @return string
     */
    public function getPriceCategoryName()
    {
        return $this->container['price_category_name'];
    }

    /**
     * Sets price_category_name
     *
     * @param string $price_category_name price_category_name
     *
     * @return $this
     */
    public function setPriceCategoryName($price_category_name)
    {
        $this->container['price_category_name'] = $price_category_name;

        return $this;
    }

    /**
     * Gets price_category_type
     *
     * @return string
     */
    public function getPriceCategoryType()
    {
        return $this->container['price_category_type'];
    }

    /**
     * Sets price_category_type
     *
     * @param string $price_category_type price_category_type
     *
     * @return $this
     */
    public function setPriceCategoryType($price_category_type)
    {
        $this->container['price_category_type'] = $price_category_type;

        return $this;
    }

    /**
     * Gets price_chf
     *
     * @return double
     */
    public function getPriceChf()
    {
        return $this->container['price_chf'];
    }

    /**
     * Sets price_chf
     *
     * @param double $price_chf price_chf
     *
     * @return $this
     */
    public function setPriceChf($price_chf)
    {
        $this->container['price_chf'] = $price_chf;

        return $this;
    }

    /**
     * Gets price
     *
     * @return double
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param double $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets max_allowed_age
     *
     * @return int
     */
    public function getMaxAllowedAge()
    {
        return $this->container['max_allowed_age'];
    }

    /**
     * Sets max_allowed_age
     *
     * @param int $max_allowed_age max_allowed_age
     *
     * @return $this
     */
    public function setMaxAllowedAge($max_allowed_age)
    {
        $this->container['max_allowed_age'] = $max_allowed_age;

        return $this;
    }

    /**
     * Gets min_allowed_age
     *
     * @return int
     */
    public function getMinAllowedAge()
    {
        return $this->container['min_allowed_age'];
    }

    /**
     * Sets min_allowed_age
     *
     * @param int $min_allowed_age min_allowed_age
     *
     * @return $this
     */
    public function setMinAllowedAge($min_allowed_age)
    {
        $this->container['min_allowed_age'] = $min_allowed_age;

        return $this;
    }

    /**
     * Gets reduction
     *
     * @return string
     */
    public function getReduction()
    {
        return $this->container['reduction'];
    }

    /**
     * Sets reduction
     *
     * @param string $reduction reduction
     *
     * @return $this
     */
    public function setReduction($reduction)
    {
        $this->container['reduction'] = $reduction;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
