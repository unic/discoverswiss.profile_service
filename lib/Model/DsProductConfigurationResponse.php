<?php
/**
 * DsProductConfigurationResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ProfileService-TEST
 *
 * Profile service test
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.20
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ProfileService\Client\Model;

use \ArrayAccess;
use \ProfileService\Client\ObjectSerializer;

/**
 * DsProductConfigurationResponse Class Doc Comment
 *
 * @category Class
 * @package  ProfileService\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DsProductConfigurationResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ProductConfigurationResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'product' => '\ProfileService\Client\Model\DsProductVariantResponse',
'valid_from' => '\DateTime',
'valid_until' => '\DateTime',
'duration' => 'string',
'number_of_travelers' => 'int',
'traveler' => '\ProfileService\Client\Model\DsOrderItemTravelerResponse[]',
'offer_term' => '\ProfileService\Client\Model\DsOfferTermResponse[]',
'fulfillment_options' => '\ProfileService\Client\Model\DsFulfillmentOptionsResponse'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'product' => null,
'valid_from' => 'date-time',
'valid_until' => 'date-time',
'duration' => null,
'number_of_travelers' => 'int32',
'traveler' => null,
'offer_term' => null,
'fulfillment_options' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'product' => 'product',
'valid_from' => 'validFrom',
'valid_until' => 'validUntil',
'duration' => 'duration',
'number_of_travelers' => 'numberOfTravelers',
'traveler' => 'traveler',
'offer_term' => 'offerTerm',
'fulfillment_options' => 'fulfillmentOptions'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'product' => 'setProduct',
'valid_from' => 'setValidFrom',
'valid_until' => 'setValidUntil',
'duration' => 'setDuration',
'number_of_travelers' => 'setNumberOfTravelers',
'traveler' => 'setTraveler',
'offer_term' => 'setOfferTerm',
'fulfillment_options' => 'setFulfillmentOptions'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'product' => 'getProduct',
'valid_from' => 'getValidFrom',
'valid_until' => 'getValidUntil',
'duration' => 'getDuration',
'number_of_travelers' => 'getNumberOfTravelers',
'traveler' => 'getTraveler',
'offer_term' => 'getOfferTerm',
'fulfillment_options' => 'getFulfillmentOptions'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['product'] = isset($data['product']) ? $data['product'] : null;
        $this->container['valid_from'] = isset($data['valid_from']) ? $data['valid_from'] : null;
        $this->container['valid_until'] = isset($data['valid_until']) ? $data['valid_until'] : null;
        $this->container['duration'] = isset($data['duration']) ? $data['duration'] : null;
        $this->container['number_of_travelers'] = isset($data['number_of_travelers']) ? $data['number_of_travelers'] : null;
        $this->container['traveler'] = isset($data['traveler']) ? $data['traveler'] : null;
        $this->container['offer_term'] = isset($data['offer_term']) ? $data['offer_term'] : null;
        $this->container['fulfillment_options'] = isset($data['fulfillment_options']) ? $data['fulfillment_options'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets product
     *
     * @return \ProfileService\Client\Model\DsProductVariantResponse
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param \ProfileService\Client\Model\DsProductVariantResponse $product product
     *
     * @return $this
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets valid_from
     *
     * @return \DateTime
     */
    public function getValidFrom()
    {
        return $this->container['valid_from'];
    }

    /**
     * Sets valid_from
     *
     * @param \DateTime $valid_from valid_from
     *
     * @return $this
     */
    public function setValidFrom($valid_from)
    {
        $this->container['valid_from'] = $valid_from;

        return $this;
    }

    /**
     * Gets valid_until
     *
     * @return \DateTime
     */
    public function getValidUntil()
    {
        return $this->container['valid_until'];
    }

    /**
     * Sets valid_until
     *
     * @param \DateTime $valid_until valid_until
     *
     * @return $this
     */
    public function setValidUntil($valid_until)
    {
        $this->container['valid_until'] = $valid_until;

        return $this;
    }

    /**
     * Gets duration
     *
     * @return string
     */
    public function getDuration()
    {
        return $this->container['duration'];
    }

    /**
     * Sets duration
     *
     * @param string $duration duration
     *
     * @return $this
     */
    public function setDuration($duration)
    {
        $this->container['duration'] = $duration;

        return $this;
    }

    /**
     * Gets number_of_travelers
     *
     * @return int
     */
    public function getNumberOfTravelers()
    {
        return $this->container['number_of_travelers'];
    }

    /**
     * Sets number_of_travelers
     *
     * @param int $number_of_travelers number_of_travelers
     *
     * @return $this
     */
    public function setNumberOfTravelers($number_of_travelers)
    {
        $this->container['number_of_travelers'] = $number_of_travelers;

        return $this;
    }

    /**
     * Gets traveler
     *
     * @return \ProfileService\Client\Model\DsOrderItemTravelerResponse[]
     */
    public function getTraveler()
    {
        return $this->container['traveler'];
    }

    /**
     * Sets traveler
     *
     * @param \ProfileService\Client\Model\DsOrderItemTravelerResponse[] $traveler traveler
     *
     * @return $this
     */
    public function setTraveler($traveler)
    {
        $this->container['traveler'] = $traveler;

        return $this;
    }

    /**
     * Gets offer_term
     *
     * @return \ProfileService\Client\Model\DsOfferTermResponse[]
     */
    public function getOfferTerm()
    {
        return $this->container['offer_term'];
    }

    /**
     * Sets offer_term
     *
     * @param \ProfileService\Client\Model\DsOfferTermResponse[] $offer_term offer_term
     *
     * @return $this
     */
    public function setOfferTerm($offer_term)
    {
        $this->container['offer_term'] = $offer_term;

        return $this;
    }

    /**
     * Gets fulfillment_options
     *
     * @return \ProfileService\Client\Model\DsFulfillmentOptionsResponse
     */
    public function getFulfillmentOptions()
    {
        return $this->container['fulfillment_options'];
    }

    /**
     * Sets fulfillment_options
     *
     * @param \ProfileService\Client\Model\DsFulfillmentOptionsResponse $fulfillment_options fulfillment_options
     *
     * @return $this
     */
    public function setFulfillmentOptions($fulfillment_options)
    {
        $this->container['fulfillment_options'] = $fulfillment_options;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
